#!/usr/bin/env python
# Copyright 2009 Daniel Woodhouse

licence = """
pms is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

pms is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with pms.  If not, see http://www.gnu.org/licenses/
"""

import gtk
import pygtk
pygtk.require20()
import os
import sys
import optparse
import cPickle
launch_dir = os.path.dirname(__file__)
src_dir = os.path.realpath(os.path.join(launch_dir, "..", "pms", "client"))
if os.path.exists(src_dir + os.sep + "libpms.py"):
    sys.path.insert(0, src_dir)
import libpms
import main
import login

PROGRAM_DETAILS = {
    "name" : "pms",
    "version" : "0.01",
    "authors" : ("Daniel Woodhouse", ""),
    "images" : os.path.join(src_dir, "images") + os.sep,
    "glade" : os.path.join(src_dir, "glade") + os.sep,
    "licence" : licence,
    "website" : "http://github.com/woodenbrick/PMS",
    "logo" : os.path.join(src_dir, "images", "event-notify-blue.png"),
}

parser = optparse.OptionParser(version=":name :version by :authors" % PROGRAM_DETAILS)
parser.add_option('--error-log', '-e', action="store_true",
                  help=("logs all stderr messages to the home directory (error.log)")) 
options, args = parser.parse_args()

#check what platform we are running on and setup a homefolder
if sys.platform.startswith("linux2"):
    PROGRAM_DETAILS['home'] = os.path.join(os.environ['HOME'], '.eventnotify') + os.sep
    if not os.path.exists(src_dir):
        PROGRAM_DETAILS['images'] = os.path.join("usr", "share", PROGRAM_DETAILS['name'], "images") + os.sep
        PROGRAM_DETAILS['glade'] = os.path.join("usr", "share", PROGRAM_DETAILS['name'], "glade") + os.sep
else:
    #windows
    PROGRAM_DETAILS['home'] = os.path.join(os.environ['HOMEPATH'], 'eventnotify') + os.sep
    
try:
    os.mkdir(PROGRAM_DETAILS['home'])
except OSError:
    pass
login.Login(PROGRAM_DETAILS)
gtk.main()