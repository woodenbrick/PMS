#!/usr/bin/env python
# Copyright 2009 Daniel Woodhouse
#
#pms is free software: you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation, either version 3 of the License, or
#(at your option) any later version.
#
#pms is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.
#
#You should have received a copy of the GNU General Public License
#along with pms.  If not, see http://www.gnu.org/licenses/

import pygtk
pygtk.require20()
import gobject
import gtk
import os
import sys
import optparse
import cPickle
import shutil

if sys.platform == "win32":
    #check if we are running from src or an executable
    if hasattr(sys, "frozen"):
        src_dir = os.path.realpath(os.path.dirname(unicode(sys.executable, sys.getfilesystemencoding())))
    else:
        src_dir = os.path.realpath(os.path.join(os.path.dirname(unicode(__file__, sys.getfilesystemencoding())), ".."))
        sys.path.insert(0, src_dir)
        src_dir = os.path.join(src_dir, "client")
else:
    #linux, check if running from src or executable 
    src_dir = os.path.realpath(os.path.join(os.path.dirname(__file__), ".."))
    if not os.path.exists(os.path.join(src_dir, "client")):
        src_dir = "/usr/share/pms"
    else:
        sys.path.insert(0, src_dir)
        src_dir = os.path.join(src_dir, "client") 

from client.settings import Settings

Settings.IMAGES = os.path.join(src_dir, "images") + os.sep
Settings.GLADE = os.path.join(src_dir, "glade") + os.sep
Settings.LOGO1 = Settings.IMAGES + "logo1.png"
Settings.LOGO1_SMALL = Settings.IMAGES + "logo1_64.png"
Settings.LOGO2 = Settings.IMAGES + "logo2.png"
parser = optparse.OptionParser(version="%s %s by %s" % (Settings.NAME, Settings.VERSION,
                                                        Settings.AUTHOR))
parser.add_option('--error-log', '-e', action="store_true",
                  help=("logs all stderr messages to the home directory (error.log)"))
parser.add_option('--local-server', '-l', action="store_true",
                  help=("Use the local google dev app server"))
parser.add_option('--debug', '-d', action="store_true",
                  help=("Show debug messages"))
options, args = parser.parse_args()

if options.debug:
    Settings.LOGGING_LEVEL = 10
if options.error_log or sys.platform == "win32":
    sys.stderr = open(Settings.HOME + "error.log", "a")
if options.local_server:
    Settings.SERVER = "http://127.0.0.1:8080"
    Settings.HOME = Settings.HOME + "dev" + os.sep
try:
    os.makedirs(os.path.join(Settings.HOME, "thumbnails", "facebook"))
    shutil.copy(Settings.IMAGES + "avatar-default.png",
                os.path.join(Settings.HOME, "thumbnails", "avatar-default.png"))
except OSError:
    pass

gobject.threads_init()
from client import login
login.Login()
gtk.main()
